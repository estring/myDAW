.TH "MSMasterSplitter" 3 "Sat Aug 31 2013" "RecordStudio" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MSMasterSplitter \- 
.PP
The \fBMSMasterSplitter\fP class uses a mixer to create a stereo stream that at the left channel mixes the sideband and at the right the midband(the mono signal)\&. The resulting stream is send to a splitterstream that creates two outputstreams(0=S, 1=M)\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <msmastercmp\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMSMasterSplitter\fP (DWORD freq, DWORD mixerFlags=256|0x200000, DWORD splitterFlags=0x200000)"
.br
.RI "\fI\fBMSMasterSplitter\fP\&. \fP"
.ti -1c
.RI "bool \fBSetInputChannel\fP (DWORD channel, DWORD flags=0x10000)"
.br
.RI "\fISetInputChannel Sets the inputchannel for the mixer\&. If a channel is already applied this channel will be replaced by the new one\&. \fP"
.ti -1c
.RI "const \fBMSMasterError\fP * \fBgetLastError\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
The \fBMSMasterSplitter\fP class uses a mixer to create a stereo stream that at the left channel mixes the sideband and at the right the midband(the mono signal)\&. The resulting stream is send to a splitterstream that creates two outputstreams(0=S, 1=M)\&. 
.PP
Definition at line 13 of file msmastercmp\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "MSMasterSplitter::MSMasterSplitter (DWORDfreq, DWORDmixerFlags = \fC256 | 0x200000\fP, DWORDsplitterFlags = \fC0x200000\fP)"

.PP
\fBMSMasterSplitter\fP\&. \fBParameters:\fP
.RS 4
\fIfreq\fP the sample rate of the mixer 
.br
\fImixerFlags\fP flags used by the mixer\&. For more information see the bassmix documentation\&. 
.br
\fIsplitterFlags\fP flags used by the splitter\&. More info see basmix documentation\&. 
.RE
.PP

.PP
Definition at line 4 of file msmastercmp\&.cpp\&.
.PP
.nf
5     :_curInpChannel(0)
6 {
7     _mixerHandle=BASS_Mixer_StreamCreate(freq,2,mixerFlags);
8     int chanMap[]={0,1,-1};
9     _msSplitter=BASS_Split_StreamCreate(_mixerHandle,splitterFlags,chanMap);
10 
11 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "bool MSMasterSplitter::SetInputChannel (DWORDchannel, DWORDflags = \fC0x10000\fP)"

.PP
SetInputChannel Sets the inputchannel for the mixer\&. If a channel is already applied this channel will be replaced by the new one\&. \fBParameters:\fP
.RS 4
\fIchannel\fP the channel to plugin to the mixer\&. 
.br
\fIflags\fP for more info see bassmix documentation\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
true if succesful else false\&. 
.RE
.PP

.PP
Definition at line 13 of file msmastercmp\&.cpp\&.
.PP
.nf
13                                                                 {
14     if(_curInpChannel != 0){
15         if(BASS_Mixer_ChannelRemove(_curInpChannel)){
16             _curInpChannel=0;
17         }
18         else{
19             _lastError=new MSMasterError(MSMasterError::ChannelRemove_Error,new QString('MSMasterSplitter'),new QString('Unable to remove current channel!'));
20             _lastError->raise();
21             return false;
22         }
23     }
24     if(!BASS_Mixer_StreamAddChannel(_mixerHandle,channel,flags)){
25         _lastError=new MSMasterError(MSMasterError::AddChannel_Error, new QString('MSMasterSplitter'), new QString('Setting input channel failed!'));
26         _lastError->raise();
27         return false;
28     }
29     float matrix[2][2]={
30         {0,-1},
31         {0,1}
32     };
33     if(!BASS_Mixer_ChannelSetMatrix(channel, *matrix)){
34         _lastError=new MSMasterError(MSMasterError::SetMatrix_Error, new QString('MSMasterSplitter'), new QString('Unable to set matrix on Channel!'));
35         _lastError->raise();
36         return false;
37     }
38     return true;
39 }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for RecordStudio from the source code\&.
